import React, { useEffect, useState ,useRef,useContext} from "react";
import { TouchableHighlight, View , Text,Image} from 'react-native';
import { useNavigation , DrawerActions } from '@react-navigation/native';
import Ionicons from 'react-native-vector-icons/Ionicons';
import Feather from 'react-native-vector-icons/Feather';
import AntDesign from 'react-native-vector-icons/AntDesign';
import { buttons, styles } from '../styles/Styles';
import { AnimatedCircularProgress } from 'react-native-circular-progress';
import { Background } from '../styles/Background';
import RBSheet from "react-native-raw-bottom-sheet";

import { startCounter, stopCounter } from 'react-native-accurate-step-counter';
import GifImage from '@lowkey/react-native-gif';

import BackgroundService from 'react-native-background-actions';

import * as Progress from 'react-native-progress';
import { map, filter } from "rxjs/operators";

import PercentageBar from '../components/PercentageBar';
import PushNotification from "react-native-push-notification";
import { HealthProvider, HealthContext } from '../context/Context';
import AsyncStorage from '@react-native-async-storage/async-storage';

export default function Step() {

    const navigation = useNavigation();

    const [filled,setFill] = useState(6000)
    const [speed,setSpeed] = useState(0)

    const [steps, setSteps] = useState(0);

    const [count,setCount]= useState(0);

    const [pause, setPause] = useState(false);

    const refRBSheet = useRef();
    
    const health = useContext(HealthContext);

    useEffect(() => {
      // const config = {
      //   default_threshold: 15.0,
      //   default_delay: 150000000,
      //   cheatInterval: 3000,
      //   // pauseCount:(value)=>{setPause(value);console.log(value)},
      //   onStepCountChange: (stepCount) => { setSteps(stepCount);setPause(true) },
      //   onCheat: () => { console.log("User is Cheating")}
      // }
      // startCounter(config);


      setSteps(health.steps)
 
          // if( stopCounter()){
          //   console.log("stop")
          // }
          // PushNotification.localNotification({
          //   channelId: '123', // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
          //   title: steps +" Steps", // (optional)
          //   message: steps+'/'+filled+"("+Math.round((steps*100)/filled).toFixed(2)+"%)" + "  Completed", // (required)
          //   playSound: false, // (optional) default: true
          //   soundName: "default",
          //   ongoing:true,
          //   autoCancel:false,
          //   vibrate:false,
          //   // ticker: "My Notification Ticker",
          //   // data: {steps}
            
          // })
          // PushNotification.cancelAllLocalNotifications() 
          // return () => { stopCounter() }        

    }, [])


    // if (speed==steps){
    //   setTimeout(() => {
    //     setPause(false);
    //     console.log(speed +'   '+ speed + '  ' + pause)       
    // }, 200);
    // }

    setTimeout(() => {
        setPause(false);
        // console.log(speed +'   '+ speed + '  ' + pause)       
    }, 3000);

    return (
      <View style={styles.container}>
          <View style={[styles.header,{elevation:0,justifyContent:'space-between'}]}>
             <Ionicons 
                name="arrow-back" 
                size={30} 
                color="black" 
                onPress={() => navigation.goBack()}
             />

              {/* <TouchableHighlight underlayColor={'#7cb26e'} onPress={() => refRBSheet.current.open()} style={{flexDirection:'row',borderColor: '#000',borderWidth:2.5,borderRadius:50}}>
              <View style={{flexDirection:'row',justifyContent:'space-around',alignItems:'center',width:120,paddingVertical:5}}>
                <Text style={{color:'black'}}>Challenge</Text>

              <AntDesign 
                            name="addusergroup" 
                            size={25} 
                            color="black"
                             style={{marginRight:5}}
                            // onPress={() => navigation.goBack()}
                        />
              </View>
               
              </TouchableHighlight>  */}
             
          </View>
          
          {/* <View style={styles.innerContainer}> */}
          <Background>
          <AnimatedCircularProgress
            size={200}
            width={10}
            fill={((steps*100)/filled)}
            rotation={-0}
            tintColor="#00e0ff"
            backgroundColor="#3d5875"
            
            lineCap={'round'}
            backgroundWidth={10}
            >
            {
                (fill) => (
                    <View style={{justifyContent:'center',alignItems:'center'}}>
                        <Text style={{fontSize:40,color:'#00e0ff',justifyContent:'center'}} onLayout={()=>setSpeed(steps)}>
                            {steps}
                        </Text> 
                        <Text style={{fontSize:25,color:'#00e0ff'}}>Steps</Text>
                        
                        <Text style={{fontSize:17,color:'#3d5875',marginTop:10}}>{filled-steps} Left</Text>
                    </View>
                
                )
            }
            </AnimatedCircularProgress>

            <View style={{marginTop:20,flexDirection:'row',alignItems:'center'}}>
              <View style={{paddingHorizontal:20,alignItems:'center'}}>
                <Text style={{fontSize:16,color:'#3d5875'}}>Distance{}</Text>
                <View style={{backgroundColor: '#00e0ff',width:30,height:3,borderRadius:5}} />
                <Text style={{fontSize:20,color:'#3d5875'}}>{(steps*0.000762).toFixed(2)}{<Text style={{fontSize:13,color:'#3d5875'}}>Km</Text>}</Text>
              </View>
              <View style={{paddingHorizontal:20,alignItems:'center'}}>
                <Text style={{fontSize:16,color:'#3d5875'}}>Complete</Text>
                <View style={{backgroundColor: '#00e0ff',width:30,height:3,borderRadius:5}} />
                <Text style={{fontSize:20,color:'#3d5875'}}>{steps+'/'+filled}({Math.round((steps*100)/filled,2).toFixed(2)}%)</Text>
                {/* <Text style={{fontSize:20,color:'#3d5875'}}>{(steps)/filled}</Text> */}
              </View>
            </View>
            {
              pause==false?
              <Image  
              source={require('../assets/walk.png')} 
              style={{
                width: 100,
                height: 100,
                resizeMode:'cover'
              }}/>
              :
              <GifImage
                source={require('../assets/walk.gif')}
                // source={{
                //   uri:
                //     'https://media.tenor.com/images/1c39f2d94b02d8c9366de265d0fba8a0/tenor.gif',
                // }} 
                style={{
                  width: 100,
                  height: 100,
                }}
                resizeMode={'cover'}
                // paused={true}
              />
            }
            
          <Progress.Bar 
          // progress={0.6} 
          progress={(steps)/filled} 
          width={250} 
          borderRadius={2} 
          height={10} 
          unfilledColor={'#3d5875'}
          borderColor={'transparent'}
          color={'#00e0ff'}
          />
          
            {/* <PercentageBar
              height={20}
              
              backgroundColor={'grey'}
              completedColor={'blue'}
              percentage={20}
            /> */}
            

            </Background>
          {/* <RBSheet
            ref={refRBSheet}
            closeOnDragDown={true}
            closeOnPressMask={true}
            customStyles={{
              wrapper: {
                backgroundColor: "transparent"
              },
              draggableIcon: {
                backgroundColor: "#fff"
              },
              container: {
                backgroundColor: '#7cb26e',
                borderTopLeftRadius:20,
                borderTopRightRadius:20,
                alignItems:'center',
                elevation:5
              },
            }}
            
          >
            <View>
              <Text style={{fontSize:20,fontWeight:'bold'}}>Create Challenge</Text>
            </View>
          </RBSheet> */}
      </View>
    );
  }